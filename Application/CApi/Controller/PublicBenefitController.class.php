<?phpnamespace CApi\Controller;class PublicBenefitController extends BaseController{    /**     * Notes: 公益活动     * User: dede     * Date: 2020/3/10     * Time: 3:05 下午     */    public function index()    {        $page = I("get.page", 1);        $row = I("get.row", 10);        $offset = ($page - 1) * $row;        $keyword = I('keyword');        $where ['status']=array('neq',0);        if (empty($keyword)) {            $where['title'] = ['like', '%' . $keyword . '%'];        }        $list = D('PublicBenefit', 'Service')->getList($where, $offset, $row);        if (count($list['rows']) > 0) {            foreach ($list['rows'] as $k => $v) {                $list['rows'][$k]['integral'] = $v['status'] == 2 ? $v['proportion'] * $v['duration'] : 0;            }        }        //广告图        $banner_type = 1003;        $banner = D('Banner', 'Service')->show($banner_type);        $tag = 'public_benefit';        $nav = D('UnivNav', 'Service')->nav($tag);        $data = [            'banner' => $banner,            'nav' => $nav,            'list' => $list,        ];        return $data;    }    /**     * Notes: 列表1     * User: dede     * Date: 2020/7/20     * Time: 10:31 下午     */    public function search()    {        $page = I("get.page", 1);        $row = I("get.row", 10);        $offset = ($page - 1) * $row;        $where ['status']=array('neq',0);        $category_id = I('category_id', 0, 'intval');        if ($category_id) {            $where['category_id']=$category_id;        }else{            $in_data=[];            $children_id=D('PublicBenefitCategory')->where(['parent_id' => 5])->getField('id');            if(is_array($children_id)){                $children_id[]=5;                $in_data = $children_id;            }elseif (!empty($children_id) && !is_array($children_id)){                $in_data = [5,$children_id];            }else{                $in_data []=5;            }            $where['cat_id']=['in',$in_data];        }        $time_type = I('time_type', 0, 'intval');        if ($time_type == 1) {            $start_time = strtotime(date('Y-m-d', strtotime('-7 day')));            $where['add_time'] = ['egt', $start_time];        }        $keyword = I('area');        if (empty($keyword)) {            $where['area'] = $keyword;        }//        var_dump($where);exit;        $list = D('PublicBenefit', 'Service')->getList($where, $offset, $row);        $count = $list['total'];        $totalpage = ceil($count / $row);        //['荔湾区', '越秀区', '天河区', '海珠区', '白云区', '黄埔区', '番禺区', '花都区', '南沙区', '从化区', '增城区']        $this->SetPaginationHeader($totalpage, $count, $page, $row);        $category=['category_id'=>0,'name'=>'全部'];        $category_data =  D('PublicBenefitCategory')->where(['parent_id' => 5])->field('id as category_id,name')->select();        if($category_data){            array_unshift($category_data,$category);        }else{            $category_data[]=$category;        }        $nav = [            'area' => [0 =>['area'=>0,'name'=>'全市'],1 =>['area'=>'荔湾区','name'=>'荔湾区'],2 =>['area'=>'越秀区','name'=>'越秀区'],3 =>['area'=>'天河区','name'=>'天河区'],4 =>['area'=>'海珠区','name'=>'海珠区'],5 =>['area'=>'白云区','name'=>'白云区'],6 =>['area'=>'黄埔区','name'=>'黄埔区'],7 =>['area'=>'番禺区','name'=>'番禺区'],8 =>['area'=>'花都区','name'=>'花都区'],9 =>['area'=>'南沙区','name'=>'南沙区'],10 =>['area'=>'从化区','name'=>'从化区'],11 =>['area'=>'增城区','name'=>'增城区']],            'category' =>  $category_data,            'release_time' => [0=>['time_type'=>0,'name'=>'全部'],1=>['time_type'=>1,'name'=>'过去七天']]        ];        $data = [            'nav' => $nav,            'list' => $list        ];        return $data;    }    public function pubsearch()    {        $page = I("get.page", 1);        $row = I("get.row", 10);        $offset = ($page - 1) * $row;        $where ['status']=array('neq',0);        $category_id = I('category_id', 0, 'intval');        if ($category_id) {            $where['category_id']=$category_id;        }else{            $in_data=[];            $children_id=D('PublicBenefitCategory')->where(['parent_id' => 6])->getField('id');            if(is_array($children_id)){                $children_id[]=6;                $in_data = $children_id;            }elseif (!empty($children_id) && !is_array($children_id)){                $in_data = [6,$children_id];            }else{                $in_data []=6;            }            $where['cat_id']=['in',$in_data];        }        $time_type = I('time_type', 0, 'intval');        if ($time_type == 1) {            $start_time = strtotime(date('Y-m-d', strtotime('-7 day')));            $where['add_time'] = ['egt', $start_time];        }        $keyword = I('area');        if (empty($keyword)) {            $where['area'] = $keyword;        }        $list = D('PublicBenefit', 'Service')->getList($where, $offset, $row);        $count = $list['total'];        $totalpage = ceil($count / $row);        //['荔湾区', '越秀区', '天河区', '海珠区', '白云区', '黄埔区', '番禺区', '花都区', '南沙区', '从化区', '增城区']        $this->SetPaginationHeader($totalpage, $count, $page, $row);        $category=['category_id'=>0,'name'=>'全部'];        $category_data =  D('PublicBenefitCategory')->where(['parent_id' => 6])->field('id as category_id,name')->select();        if($category_data){            array_unshift($category_data,$category);        }else{            $category_data[]=$category;        }        $nav = [            'area' => [0 =>['area'=>0,'name'=>'全市'],1 =>['area'=>'荔湾区','name'=>'荔湾区'],2 =>['area'=>'越秀区','name'=>'越秀区'],3 =>['area'=>'天河区','name'=>'天河区'],4 =>['area'=>'海珠区','name'=>'海珠区'],5 =>['area'=>'白云区','name'=>'白云区'],6 =>['area'=>'黄埔区','name'=>'黄埔区'],7 =>['area'=>'番禺区','name'=>'番禺区'],8 =>['area'=>'花都区','name'=>'花都区'],9 =>['area'=>'南沙区','name'=>'南沙区'],10 =>['area'=>'从化区','name'=>'从化区'],11 =>['area'=>'增城区','name'=>'增城区']],            'category' =>  $category_data,            'release_time' => [0=>['time_type'=>0,'name'=>'全部'],1=>['time_type'=>1,'name'=>'过去七天']]        ];        $data = [            'nav' => $nav,            'list' => $list        ];        return $data;    }    /**     * Notes: 详情     * User: dede     * Date: 2020/7/20     * Time: 10:31 下午     */    public function details()    {        $id = I('id', 0, 'intval');        if (!$id) {            E('请先选择要查看的公益活动');        }        $detail = D('PublicBenefit', 'Service')->details($id);        $detail['endorse']=0;        if ($this->UserAuthCheckLogin()) {            $user = $this->AuthUserInfo;            $detail['endorse'] = D('PublicBenefitEndorse')->where(['activity_id' => $id, 'user_id' => $user['id']])->getField('state')?:0;        };        $user_data= D('user')->where(['id' => $detail['user_id']])->find();        $detail['nickname']=$user_data['nickname']?:'一点椿';        $detail['fans_num'] = $user_data['fans']?:0;        $detail['avatar'] =$user_data['avatar']?DoUrlHandle($user_data['avatar']):'';        $page = I("get.page", 1);        $row = I("get.row", 10);        $offset = ($page - 1) * $row;        $data = D('PublicBenefit', 'Service')->comment($id, 0, $offset, $row);        if (count($data['rows']) > 0){            $data['rows'] = D('PublicBenefit', 'Service')->commentListFormat($data['rows']);            foreach ($data['rows'] as &$item){                $item['author']=$detail['user_id']==$item['user_id']?'作者':'';                $item['comment_endorse'] =0;                $item['comment_num'] =D('PublicBenefitComment')->where(['replay_id' => $item['id']])->count('id');                $item['comment_endorse_num'] =D('PublicBenefitCommentEndorse')->where(['comment_id' => $item['id'], 'state' => 1])->count('id');                if ($this->UserAuthCheckLogin()) {                    $user = $this->AuthUserInfo;                    $detail['comment_endorse'] = D('PublicBenefitCommentEndorse')->where(['comment_id' => $item['id'], 'user_id' => $user['id']])->getField('state')?:0;                };            }        }//        $comment = D('PublicBenefit', 'Service')->comment($id);        $data = [            'detail' => $detail,            'comment' => $data,        ];        return $data;    }    /**     * Notes: 报名     * User: dede     * Date: 2020/7/20     * Time: 10:32 下午     */    public function apply()    {        if (!$this->UserAuthCheckLogin()) {            E('请先登录！');        };        $user = $this->AuthUserInfo;        $activity_id = I('activity_id', 0, 'intval');        if (!$activity_id) {            E('请先选择活动id');        }        $id_card = I('id_card');        if (!$id_card) {            E('请上传身份证照片');        }        $true_name = I('true_name');        if (!$true_name) {            E('请输入真实姓名');        }        $gender = I('gender/d', 0);        if (!$gender) {            E('请选择性别');        }        $age = I('age/d', 0);        if (!$age) {            E('请输入年龄');        }        $mobile = I('mobile');        if (!$mobile) {            E('请输入电话号码');        }        if (!isMobile($mobile)) {            E('电话号码格式错误');        }        $data = [            'activity_id' => $activity_id,            'user_id' => $user['id'],            'id_card' => is_array($id_card)?implode(',',$id_card):$id_card,            'true_name' => $true_name,            'gender' => $gender,            'age' => $age,            'mobile' => $mobile,            'add_time' => time(),        ];        D()->startTrans();        $res = D('PublicBenefitApply')->add($data);        if (!$res) {            D()->rollback();            E('失败！');        }        $datas = ['id'=>$activity_id];        $datas['join_num'] = D('PublicBenefit')->where(['id' => $activity_id])->getField('join_num')+1;        D('PublicBenefit')->save($datas);        $where = [            'user_id' => $user['id']        ];        $card = D('PublicBenefitCard')->where($where)->find();        if ($card) {            $data = [                'id' => $card['id'],                'mobile' => $mobile,            ];            $res = D('PublicBenefitCard')->save($data);            if (!$res) {                D()->rollback();                E('失败！');            }        } else {            $data = [                'number' => $this->BuildOrderSN(),                'user_id' => $user['id'],                'id_card' => is_array($id_card)?implode(',',$id_card):$id_card,                'true_name' => $true_name,                'gender' => $gender,                'age' => $age,                'mobile' => $mobile,                'add_time' => time(),            ];            $res = D('PublicBenefitCard')->add($data);            if (!$res) {                D()->rollback();                E('失败！');            }        }        D()->commit();        return true;    }    /**     * Notes: 我的志愿卡     * User: dede     * Date: 2020/7/20     * Time: 10:34 下午     */    public function card()    {        $statusdata = [0=>'去申请',1=>'审核中',2=>'继续参加'];        if (!$this->UserAuthCheckLogin()) {            E('请先登录！');        };        $user = $this->AuthUserInfo;        $where = [            'user_id' => $user['id']        ];        $card = D('PublicBenefitCard')->where($where)->find();        $useravatar = D('user')->where(['id'=>$user['id']])->getField('avatar');        $card['avatar'] =$useravatar?DoUrlHandle($useravatar):'';        $card['status_text'] = $card['status']?$statusdata[$card['status']]:$statusdata[0];        $integral = $duration = 0;        if ($card) {            $map = ['user_id' => $user['id'], 'status' => 2];            $duration = D('PublicBenefitApply')->where($map)->getField('SUM(duration)');            $integral = D('PublicBenefitApply')->where($map)->getField('SUM(integral)');        }        $data = [            'card' => $card,            'volunteer' => ['duration' => $duration?:0, 'integral' => $integral?:0]        ];        return $data;    }    /**     * Notes: 报名历史记录     * User: dede     * Date: 2020/7/20     * Time: 10:32 下午     */    public function history()    {        if (!$this->UserAuthCheckLogin()) {            E('请先登录！');        };        $user = $this->AuthUserInfo;        $where = [            'user_id' => $user['id'],        ];        $apply = D('PublicBenefitApply')->where($where)->getField('activity_id');        if(is_array($apply)){            $in_data = $apply;        }elseif (!empty($apply) && !is_array($apply)){            $in_data = [$apply];        }else{            $in_data []=0;        }     //   var_dump($in_data);exit;        $map['id'] = ['in', $in_data];        $page = I("get.page", 1);        $row = I("get.row", 10);        $offset = ($page - 1) * $row;        $list = D('PublicBenefit', 'Service')->getList($map, $offset, $row);        if (count($list['rows']) > 0) {            foreach ($list['rows'] as $k => $v) {                $list['rows'][$k]['integral'] = $v['status'] == 2 ? $v['proportion'] * $v['duration'] : 0;            }        }        return $list;    }    /**     * Notes: 添加和回复评论     * User: dede     * Date: 2020/7/23     * Time: 16:50 下午     */    public function addcomment()    {        if (!$this->UserAuthCheckLogin()) {            E('请先登录！');        };        $user = $this->AuthUserInfo;        $activity_id = I('activity_id', 0);        if (!$activity_id) {            E('请先选择活动id');        }        $content = I('content');        if (!$content) {            E('评论内容不能空');        }//        $res = D('PublicBenefitComment')->where(['activity_id' => $activity_id, 'user_id' => $user['id']])->find();//        if ($res)//            E('用户已评论，无法重复评论');        $replay_id = I('replay_id', 0);        $data = [            'activity_id' => $activity_id,            'user_id' => $user['id'],            'content' => $content,            'add_time' => time(),            'replay_id'=>$replay_id?:0,        ];        $res = D('PublicBenefitComment')->add($data);        if (!$res) {            E('失败！');        }        $datas = ['id'=>$activity_id];        $datas['comment_num'] = D('PublicBenefit')->where(['id' => $activity_id])->getField('comment_num')+1;        D('PublicBenefit')->save($datas);        return true;    }    /**     * Notes: 点赞     * User: dede     * Date: 2020/7/24     * Time: 16:50 下午     */    public function  endorse(){        if (!$this->UserAuthCheckLogin()) {            E('请先登录！');        };        $user = $this->AuthUserInfo;        $activity_id = I('activity_id', 0);        if (!$activity_id) {            E('请先选择活动id');        }        $res =  D('PublicBenefitEndorse')->where(['activity_id' => $activity_id, 'user_id' => $user['id']])->find();//        var_dump($res);exit;        $endorse = 0;        if(empty($res)){            $data = [                'activity_id' => $activity_id,                'user_id' => $user['id'],                'state'=>1,                'time' => time(),            ];            $result = D('PublicBenefitEndorse')->add($data);            $endorse=1;        }else{            $data = ['id'=>$res['id'],'state'=>$res['state']==1?0:1,'time' => time()];            $result = D('PublicBenefitEndorse')->save($data);            $endorse = $res['state'];        }        if (!$result) {            E('失败！');        }        $datas = ['id' => $activity_id];        if($data['state']==1){            $datas['thumbs_num'] = D('PublicBenefit')->where(['id' => $activity_id])->getField('thumbs_num')+1;        }else{            $datas['thumbs_num'] = D('PublicBenefit')->where(['id' => $activity_id])->getField('thumbs_num')-1;        }        if($datas['thumbs_num']<0)$datas['thumbs_num']=0;        D('PublicBenefit')->save($datas);        return ['state'=>$endorse];    }    /**     * Notes: 获取公益活动分类     * User: dede     * Date: 2020/7/24     * Time: 16:50 下午     */    public function  category(){      $data = [         'area' =>  ['荔湾区', '越秀区', '天河区', '海珠区', '白云区', '黄埔区', '番禺区', '花都区', '南沙区', '从化区', '增城区'],            'category'=>D('PublicBenefitCategory')->where(['parent_id' => 6])->field('id as category_id,name')->select()        ];        return $data;    }    /**     * Notes: 获取公益活动提交     * User: dede     * Date: 2020/7/24     * Time: 16:50 下午     */    public function userBenefit(){        $areadata = ['荔湾区', '越秀区', '天河区', '海珠区', '白云区', '黄埔区', '番禺区', '花都区', '南沙区', '从化区', '增城区'];        if (!$this->UserAuthCheckLogin()) {            E('请先登录！');        };        $user = $this->AuthUserInfo;        $resource_type = I('resource_type', 0, 'intval');        if (!$resource_type) {            E('请先选择资源类型');        }        $resource = I('resource');        if (!$resource) {            E('资源不能为空');        }        $resource_num = explode(',',$resource);        if($resource_type==2){            if(count($resource_num)!=1)E('视频资源只能上传一个！');        }else{            if(count($resource_num)<1)E('图片资源至少上传一个！');        }        $title = I('title');        if (!$title) {            E('标题不能为空');        }        $resdata =D('PublicBenefit')->where(['title'=>$title])->find();        if($resdata) E('标题重复');        $content = I('content');        if (!$content) {            E('内容不能为空');        }        $sponsor = I('sponsor');        if (!$sponsor) {            E('主办单位不能为空');        }        $cat_id = I('cat_id', 6);        $children_id=D('PublicBenefitCategory')->where(['parent_id' => 6])->getField('id');        if(is_array($children_id)){            $children_id[]=6;            $in_data = $children_id;            if(!in_array($cat_id,$in_data)) E('分类不存在1');        }elseif (!empty($children_id) && !is_array($children_id)){            $in_data = [6,$children_id];            if(!in_array($cat_id,$in_data)) E('分类不存在2');        }        $recruit_num = I('recruit_num', 0);        if (!$recruit_num) {            E('招募人数不为空');        }        $area = I('area');        if (!in_array($area,$areadata)) {            E('活动区域不规范');        }        $duration = I('duration', 0);        if (!$duration) {            E('志愿服务时长不为空');        }        $proportion = I('proportion', 0);        if (!$proportion) {            E('兑换比例不为空');        }        $start_time = I('start_time', 0);        if (!$start_time) {            E('活动开始时间不能空');        }        $data = [            'cat_id' => $cat_id?:6,            'user_id' => $user['id'],            'title'=>$title,            'resource_type' => $resource_type,            'resource' => $resource,            'content' => $content,            'sponsor' => $sponsor,            'recruit_num' => $recruit_num,            'add_time' => time(),            'start_time' => $start_time,            'area'=>$area,            'status'=>0,            'proportion'=>$proportion,            'duration'=>$duration        ];        $res = D('PublicBenefit')->add($data);        if (!$res) {            E('失败！');        }        return true;    }    /**     * Notes: 分享统计     * User: dede     * Date: 2020/7/27     * Time: 16:50 下午     */    public function pubshares(){        $activity_id = I('activity_id', 0);        if (!$activity_id) {            E('请先选择活动id');        }        $datas = ['id'=>$activity_id];        $datas['share_num'] = D('PublicBenefit')->where(['id' => $activity_id])->getField('share_num')+1;        D('PublicBenefit')->save($datas);    }    /**     * Notes: 评论点赞     * User: dede     * Date: 2020/7/24     * Time: 16:50 下午     */    public function  comendorse(){        if (!$this->UserAuthCheckLogin()) {            E('请先登录！');        };        $user = $this->AuthUserInfo;        $comment_id = I('comment_id', 0);        if (!$comment_id) {            E('请先选择活动id');        }        $comment =  D('PublicBenefitComment')->where(['comment_id' => $comment_id, 'replay_id' =>0])->find();        if(empty($comment)) E('不是主评论无法点赞！');        $res =  D('PublicBenefitCommentEndorse')->where(['comment_id' => $comment_id, 'user_id' => $user['id']])->find();//        var_dump($res);exit;        $endorse = 0;        if(empty($res)){            $data = [                'comment_id' => $comment_id,                'user_id' => $user['id'],                'state'=>1,                'time' => time(),            ];            $result = D('PublicBenefitCommentEndorse')->add($data);            $endorse=1;        }else{            $data = ['id'=>$res['id'],'state'=>$res['state']==1?0:1,'time' => time()];            $result = D('PublicBenefitCommentEndorse')->save($data);            $endorse = $res['state'];        }        if (!$result) {            E('失败！');        }        return ['state'=>$endorse];    }    /**     * Notes: 活动报名信息返回     * User: dede     * Date: 2020/7/24     * Time: 16:50 下午     */    public function  applydata(){        $activity_id = I('activity_id', 0);        if (!$activity_id) {            E('请先选择活动id');        }        if (!$this->UserAuthCheckLogin()) {            E('请先登录！');        };        $user = $this->AuthUserInfo;        $card = D('PublicBenefitCard')->where([ 'user_id' => $user['id']])->find();        if($card){            $card['id_card'] = explode(',', $card['id_card']);            foreach ($card['id_card'] as &$item){                $item = DoUrlHandle($item);            }        }        $detail = D('PublicBenefit', 'Service')->details($activity_id);        if($detail)$detail['detailed_address'] = '广州市'.$detail['area'].$detail['address'];        return ['activity'=>$detail,'card'=>$card];    }}